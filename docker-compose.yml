services:

  gateway.geoquizz:
      build: ./back/gateway/app
      container_name: gateway-geoquizz
      volumes:
        - ./back/gateway/app:/var/app
      ports:
        - '33554:80'
      networks:
        - geoquizz-network
  
  api.auth:
    build: ./back/app-auth/app
    container_name: api-auth-geoquizz
    volumes:
      - ./back/app-auth/app:/var/app
    ports:
      - "33550:80"
    depends_on:
      - auth.db
    networks:
      - geoquizz-network

  auth.db:
    image: postgres:latest
    container_name: db-auth-geoquizz
    ports:
      - '33551:5432'
    env_file:
      - ./back/app-auth/auth.env
    volumes:
      - ./back/app-auth/sql/:/docker-entrypoint-initdb.d
    networks:
      - geoquizz-network
  
  api.games:
    build: ./back/app-games/app
    container_name: api-games-geoquizz
    volumes:
      - ./back/app-games/app:/var/app
    ports:
      - "33552:80"
    depends_on:
      - games.db
    networks:
      - geoquizz-network
  
  games.db :
    image: postgres:latest
    container_name: db-games-geoquizz
    ports:
      - '33553:5432'
    env_file:
      - ./back/app-games/games.env
    volumes:
      - ./back/app-games/sql/:/docker-entrypoint-initdb.d
    networks:
      - geoquizz-network
    
  api.directus:
    image: directus/directus:latest
    container_name: api-directus-geoquizz
    env_file:
      - ./back/app-directus/directus-api.env
    depends_on:
      directus.db:
        condition: service_healthy
    ports:
      - "33556:8055"
    networks:
      - geoquizz-network

  directus.db:
    image: postgres:latest
    container_name: db-directus-geoquizz
    volumes:
      - ./back/app-directus/data:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "root", "root", "-d", "directusdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    env_file:
      - ./back/app-directus/directus-db.env
    networks:
      - geoquizz-network  

  frontend:
    build: ./front
    container_name: geoquizz_frontend
    restart: always
    ports:
      - "33555:5173"
    depends_on:
      - api.directus
      - api.games
      - api.auth

    networks:
      - geoquizz-network
    volumes:
      - ./front:/app
      - /app/node_modules
  
  adminer:
    image: adminer
    container_name: adminer-geoquizz
    ports:
      - '8080:8080'
    networks:
      - geoquizz-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - geoquizz-network
 
  api.mail:
    build: ./back/app-mail      
    env_file: ./back/app-mail/mail.env
    ports:
      - '6084:80'
    volumes:
      - ./back/app-mail:/var/php
    working_dir: /var/php
    networks:
      - geoquizz-network
    depends_on:
      - rabbitmq
    command: php -S 0.0.0.0:80 -t /var/php/public

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - '1080:1080' # Interface web de MailCatcher
      - '1025:1025' # Port 
    networks:
      - geoquizz-network   

networks:
    geoquizz-network:
      driver: bridge